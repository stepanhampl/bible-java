plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.openapi.generator' version '7.3.0'
}

group = 'stepanhampl'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
implementation 'org.springframework.boot:spring-boot-starter'
implementation 'org.springframework.boot:spring-boot-starter-web'
implementation 'org.springframework.boot:spring-boot-starter-validation'
implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
implementation 'org.flywaydb:flyway-core'
implementation 'org.flywaydb:flyway-mysql'
implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
implementation 'io.swagger.core.v3:swagger-annotations:2.2.20'
implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
implementation 'org.projectlombok:lombok:1.18.32'
annotationProcessor 'org.projectlombok:lombok:1.18.32'
runtimeOnly 'com.mysql:mysql-connector-j'
testImplementation 'org.springframework.boot:spring-boot-starter-test'
testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
testCompileOnly 'org.projectlombok:lombok:1.18.32'
testAnnotationProcessor 'org.projectlombok:lombok:1.18.32'
}

tasks.named('test') {
	useJUnitPlatform()
}

// OpenAPI Generator configuration
openApiGenerate {
	generatorName = 'spring'
	inputSpec = "$rootDir/src/main/resources/api.yaml"
	outputDir = "$buildDir/generated"
	packageName = 'stepanhampl.bible.api'
	apiPackage = 'stepanhampl.bible.api'
	modelPackage = 'stepanhampl.bible.api.model'
	configOptions = [
		delegatePattern: 'true',
		useSpringBoot3: 'true',
		interfaceOnly: 'false',
		skipDefaultInterface: 'false',
		useTags: 'true',
		generateApiDocumentation: 'false',
		generateModelDocumentation: 'false',
		hideGenerationTimestamp: 'true',
		skipSupportingFiles: 'true',
		skipOverwrite: 'false'
	]
	generateApiTests = false
	generateModelTests = false
	generateApiDocumentation = false
	generateModelDocumentation = false
	templateDir = null
}

// Add generated sources to main sourceSet
sourceSets.main.java.srcDirs += "$buildDir/generated/src/main/java"

// Clean up unwanted generated files
task cleanupGeneratedFiles {
	doLast {
		delete "$buildDir/generated/src/main/java/org"
		delete fileTree("$buildDir/generated/src/test/java/org/openapitools")
	}
}

// Ensure API generation runs before compilation
compileJava.dependsOn tasks.openApiGenerate
tasks.named('openApiGenerate').configure {
	finalizedBy cleanupGeneratedFiles
}

// Specify the main class explicitly
springBoot {
	mainClass = 'stepanhampl.bible.BibleApplication'
}
